(window.webpackJsonp=window.webpackJsonp||[]).push([[5],{188:function(e,a,t){"use strict";t.r(a);t(103),t(63),t(181);var r,n,o=t(182),s={name:"Generator",mixins:[t(183).a],data:function(){return{loading:!0,currentNetwork:null,trxHash:"",makingTransaction:!1,formDisabled:!1,token:{},enableTransfer:!0}},mounted:function(){this.currentNetwork=this.getParam("network")||this.network.default,this.initDapp()},methods:{initDapp:(n=Object(o.a)(regeneratorRuntime.mark(function e(){return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:return this.network.current=this.network.list[this.currentNetwork],e.prev=1,e.next=4,this.initWeb3(this.currentNetwork,!0);case 4:this.initToken(),this.loading=!1,e.next=12;break;case 8:e.prev=8,e.t0=e.catch(1),alert(e.t0),document.location.href=this.$withBase("/");case 12:case"end":return e.stop()}},e,this,[[1,8]])})),function(){return n.apply(this,arguments)}),generateToken:(r=Object(o.a)(regeneratorRuntime.mark(function e(){var a=this;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:this.$validator.validateAll().then(function(){var e=Object(o.a)(regeneratorRuntime.mark(function e(t){var r,n,o,s,i,l;return regeneratorRuntime.wrap(function(e){for(;;)switch(e.prev=e.next){case 0:if(!t){e.next=30;break}if(a.metamask.installed){e.next=6;break}return alert("To create a Token please install MetaMask!"),e.abrupt("return");case 6:if(a.metamask.netId===a.network.current.id){e.next=9;break}return alert("Your MetaMask in on the wrong network. Please switch on ".concat(a.network.current.name," and try again!")),e.abrupt("return");case 9:if(r=a.token.name,n=a.token.symbol.toUpperCase(),o=new a.web3.BigNumber(a.token.decimals),s=new a.web3.BigNumber(a.token.cap).mul(Math.pow(10,a.token.decimals)),i=new a.web3.BigNumber(a.token.initialBalance).mul(Math.pow(10,a.token.decimals)),l=a.enableTransfer,e.prev=15,a.trxHash="",a.formDisabled=!0,a.makingTransaction=!0,a.legacy){e.next=22;break}return e.next=22,a.web3Provider.enable();case 22:setTimeout(function(){a.contracts.token.new(r,n,o,s,i,l,{from:a.web3.eth.coinbase,data:a.contracts.token.bytecode},function(e,t){e?(a.makingTransaction=!1,a.formDisabled=!1):t.address?(a.token.address=t.address,a.token.link=a.network.current.etherscanLink+"/token/"+a.token.address,a.$forceUpdate()):(a.trxHash=t.transactionHash,a.trxLink=a.network.current.etherscanLink+"/tx/"+a.trxHash)})},500),e.next=30;break;case 25:e.prev=25,e.t0=e.catch(15),a.makingTransaction=!1,a.formDisabled=!1,alert("Some error occurred. Maybe you rejected the transaction or you have MetaMask locked!");case 30:case"end":return e.stop()}},e,this,[[15,25]])}));return function(a){return e.apply(this,arguments)}}()).catch(function(e){console.log(e),a.makingTransaction=!1,alert("Some error occurred.")});case 1:case"end":return e.stop()}},e,this)})),function(){return r.apply(this,arguments)}),getParam:function(e){var a={};return window.location.href.replace(location.hash,"").replace(/[?&]+([^=&]+)=?([^&]*)?/gi,function(e,t,r){a[t]=void 0!==r?r:""}),e?a[e]?a[e]:null:a}}},i=t(7),l=Object(i.a)(s,function(){var e=this,a=e.$createElement,t=e._self._c||a;return t("b-row",[t("b-col",{staticClass:"mt-4 p-0",attrs:{lg:"10","offset-lg":"1"}},[e.loading?e._e():t("b-card",{attrs:{"bg-variant":"light",title:e.$site.title}},[t("p",{staticClass:"card-text"},[e._v("\n                "+e._s(e.$site.description)+"\n            ")]),e._v(" "),e.metamask.installed?e._e():t("small",[e._v("\n                You need the "),t("a",{attrs:{href:"https://metamask.io/",target:"_blank"}},[e._v("MetaMask")]),e._v(" extension.\n            ")]),e._v(" "),t("b-alert",{staticClass:"mt-3",attrs:{variant:"success",show:e.makingTransaction}},[t("div",[e._v("Making transaction.")]),e._v(" "),e.trxHash?t("div",[t("b",[e._v("Well! Transaction done!")]),t("br"),e._v("\n                    Transaction id "),t("a",{attrs:{href:e.trxLink,target:"_blank"}},[t("span",{domProps:{innerHTML:e._s(e.trxHash)}})]),t("br"),e._v("\n\n                    Retrieving Token.\n                    "),e.token.address?t("div",[t("b",[e._v("Your Token")]),e._v(" "),t("b-link",{attrs:{href:e.token.link,target:"_blank"}},[t("span",{domProps:{innerHTML:e._s(e.token.address)}})])],1):t("div",[e._v("Please wait...")])]):t("div",[e._v("Please wait...")])]),e._v(" "),e.makingTransaction?e._e():t("b-form",{staticClass:"mt-3",on:{submit:function(a){return a.preventDefault(),e.generateToken(a)}}},[t("fieldset",{attrs:{disabled:e.formDisabled}},[t("b-card",[t("b-row",[t("b-col",{attrs:{lg:"4"}},[t("b-form-group",{attrs:{description:"Choose a name for your token.",label:"Token name *","label-for":"tokenName"}},[t("b-form-input",{directives:[{name:"validate",rawName:"v-validate",value:{required:!0},expression:"{ required: true }"}],class:{"is-invalid":e.errors.has("tokenName")},attrs:{id:"tokenName",name:"tokenName",placeholder:"Your token name","data-vv-as":"token name",maxlength:"20"},model:{value:e.token.name,callback:function(a){e.$set(e.token,"name","string"==typeof a?a.trim():a)},expression:"token.name"}}),e._v(" "),t("small",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("tokenName"),expression:"errors.has('tokenName')"}],staticClass:"text-danger"},[e._v("\n                                        "+e._s(e.errors.first("tokenName"))+"\n                                    ")])],1)],1),e._v(" "),t("b-col",{attrs:{lg:"4"}},[t("b-form-group",{attrs:{description:"Choose a symbol for your token (usually 3-4 chars).",label:"Token symbol *","label-for":"tokenSymbol"}},[t("b-form-input",{directives:[{name:"validate",rawName:"v-validate",value:{required:!0},expression:"{ required: true }"}],class:{"is-invalid":e.errors.has("tokenSymbol")},attrs:{id:"tokenSymbol",name:"tokenSymbol",placeholder:"Your token symbol","data-vv-as":"token symbol",maxlength:"5"},model:{value:e.token.symbol,callback:function(a){e.$set(e.token,"symbol","string"==typeof a?a.trim():a)},expression:"token.symbol"}}),e._v(" "),t("small",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("tokenSymbol"),expression:"errors.has('tokenSymbol')"}],staticClass:"text-danger"},[e._v("\n                                        "+e._s(e.errors.first("tokenSymbol"))+"\n                                    ")])],1)],1),e._v(" "),t("b-col",{attrs:{lg:"4"}},[t("b-form-group",{attrs:{description:"Insert the decimal precision of your token. If you don't know what to insert, use 18.",label:"Token decimals *","label-for":"tokenDecimals"}},[t("b-form-input",{directives:[{name:"validate",rawName:"v-validate",value:{required:!0,numeric:!0,min_value:0,max_value:36},expression:"{ required: true, numeric: true, min_value: 0, max_value: 36 }"}],class:{"is-invalid":e.errors.has("tokenDecimals")},attrs:{id:"tokenDecimals",name:"tokenDecimals",placeholder:"Your token decimals","data-vv-as":"token decimals",step:"1"},model:{value:e.token.decimals,callback:function(a){e.$set(e.token,"decimals","string"==typeof a?a.trim():a)},expression:"token.decimals"}}),e._v(" "),t("small",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("tokenDecimals"),expression:"errors.has('tokenDecimals')"}],staticClass:"text-danger"},[e._v("\n                                        "+e._s(e.errors.first("tokenDecimals"))+"\n                                    ")])],1)],1)],1)],1),e._v(" "),t("b-card",{staticClass:"mt-3"},[t("b-row",[t("b-col",{attrs:{lg:"4"}},[t("b-form-group",{attrs:{description:"Insert the maximum number of tokens available.",label:"Token cap *","label-for":"tokenCap"}},[t("b-form-input",{directives:[{name:"validate",rawName:"v-validate",value:{required:!0,numeric:!0,min_value:1,max_value:1e15},expression:"{ required: true, numeric: true, min_value: 1, max_value: 1000000000000000 }"}],class:{"is-invalid":e.errors.has("tokenCap")},attrs:{id:"tokenCap",name:"tokenCap",placeholder:"Your token cap","data-vv-as":"token cap",step:"1"},model:{value:e.token.cap,callback:function(a){e.$set(e.token,"cap","string"==typeof a?a.trim():a)},expression:"token.cap"}}),e._v(" "),t("small",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("tokenCap"),expression:"errors.has('tokenCap')"}],staticClass:"text-danger"},[e._v("\n                                        "+e._s(e.errors.first("tokenCap"))+"\n                                    ")])],1)],1),e._v(" "),t("b-col",{attrs:{lg:"4"}},[t("b-form-group",{attrs:{description:"Insert the initial number of tokens available. Will be put in your account.",label:"Token initial balance *","label-for":"tokenInitialBalance"}},[t("b-form-input",{directives:[{name:"validate",rawName:"v-validate",value:{required:!0,numeric:!0,min_value:0,max_value:e.token.cap},expression:"{ required: true, numeric: true, min_value: 0, max_value: token.cap }"}],class:{"is-invalid":e.errors.has("tokenInitialBalance")},attrs:{id:"tokenInitialBalance",name:"tokenInitialBalance",placeholder:"Your token initial balance","data-vv-as":"token initial balance",step:"1"},model:{value:e.token.initialBalance,callback:function(a){e.$set(e.token,"initialBalance","string"==typeof a?a.trim():a)},expression:"token.initialBalance"}}),e._v(" "),t("small",{directives:[{name:"show",rawName:"v-show",value:e.errors.has("tokenInitialBalance"),expression:"errors.has('tokenInitialBalance')"}],staticClass:"text-danger"},[e._v("\n                                        "+e._s(e.errors.first("tokenInitialBalance"))+"\n                                    ")])],1)],1),e._v(" "),t("b-col",{attrs:{lg:"4"}},[t("b-form-group",{attrs:{description:"Choose your Network.",label:"Network *","label-for":"network"}},[t("b-form-select",{attrs:{id:"network"},on:{input:e.initDapp},model:{value:e.currentNetwork,callback:function(a){e.currentNetwork=a},expression:"currentNetwork"}},e._l(e.network.list,function(a,r){return t("option",{domProps:{value:r}},[e._v(e._s(a.name))])}),0)],1)],1)],1)],1),e._v(" "),t("b-card",{staticClass:"mt-3"},[t("b-row",[t("b-col",{attrs:{lg:"12"}},[t("b-form-group",{attrs:{description:"Choose to enable transfer during deploy or enable manually later.",label:"Enable transfer","label-for":"enableTransfer"}},[t("b-form-select",{attrs:{id:"network"},model:{value:e.enableTransfer,callback:function(a){e.enableTransfer=a},expression:"enableTransfer"}},[t("option",{domProps:{value:!0}},[e._v("Enable transfer during deploy")]),e._v(" "),t("option",{domProps:{value:!1}},[e._v("Enable transfer manually later")])])],1),e._v(" "),!1===e.enableTransfer?t("b-alert",{attrs:{show:"",variant:"warning"}},[t("strong",[e._v("\n                                        NOTE: If you don't enable transfer during deploy, tokens won't be transferable\n                                        until you call the "),t("i",[e._v("enableTransfer")]),e._v(" function.\n                                    ")]),t("br"),e._v("\n                                    Only people (or smart contract) with "),t("i",[e._v("Operator")]),e._v(" role will be able to transfer tokens."),t("br"),e._v("\n                                    Contract creator will be Operator by default, so he can transfer tokens also when transfer is\n                                    not enabled."),t("br"),e._v("\n                                    You can also add or remove the Operator role to addresses."),t("br"),e._v("\n                                    This is because, by business choices, you may decide not to enable transfer until a specific\n                                    time.\n                                ")]):e._e()],1)],1)],1),e._v(" "),t("b-row",{staticClass:"mt-3"},[t("b-col",{attrs:{lg:"12"}},[t("b-button",{attrs:{variant:"success",size:"lg",type:"submit"}},[e._v("Create Token")])],1)],1)],1)])],1)],1)],1)},[],!1,null,null,null);a.default=l.exports}}]);